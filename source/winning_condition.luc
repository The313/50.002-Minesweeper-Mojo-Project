module winning_condition (
    input clk,  // clock
    input rst,  // reset
    input mfromval,
    output mfromadrs[6],
    input mfstateval[2],
    output mfstateadrs[6],
    output done,
    output win
  ) {

  
    .clk(clk) {
        .rst(rst) {
            counter count(#SIZE(6),#UP(1)); //counter to go through all possible address values
      }
    }

    var isone;
    var inv;  
  
    always {
    done = 0;
    win = 0;
    isone = 0;
    mfromadrs = count.value;
    mfstateadrs = count.value;  //values go to rom and register and return data as inputs
    if(count.value[2:0] !=b111){    //skip the 8th count
          if (mfstateval[0]){       // check if tile is cleared 
            isone = 1;
            inv = mfromval^isone;
            if (!inv){
              done = 1;}
            else{ 
              done = 0;}
          } 
          else{                     
            inv = mfromval^mfstateval;
            if (!inv){
              done = 1;}
            else{ 
              done = 0;}
          } 
        if(count.value[5:0] == b111111){   //check if all tiles are cleared
          win = 1;
      }  
    }
  }
}
